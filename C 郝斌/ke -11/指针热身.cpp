/**
    2020年4月10日 22点55分
	指针 ：和地址是同一个含义 
	指针就是地址，地址就是指针，地址就是内存单元的编号，所以也可以理解为指针只是个值，而这个值只是在内存编号中有意义 
	指针变量：存放指针/地址的变量 ，指针和指针变量是两个不同的东西
	但需要注意：通常叙述时，会把指针变量简称为指针，实际上两者含义并不相同，而指针(编号)本身并没有意义，而变量的存放才有意义，所以我们所说的指针其实是指针变量的意思，在使用时心里明白就行，不用一定强行区分的十分清楚。 
*/

#include<stdio.h>

int main(void)
{
	int *p; //p是变量的名字，int * 表示p变量存放的是int类型变量的地址
	//此句代码意思是：一个名叫p的变量，只能存放整型变量的地址
	//一个变量，代表在内存中的一个地址 
	//int *p不表示定义了一个名叫*p的int型变量，而是表示p是变量名，其类型是int *，而int *表l类型示的是存放int类型变量地址的类型 

	int i = 3;
	
	// p = i; //错误：因为类型不一致，p只能存放int类型变量的地址，不能存放int类型变量/值
	// p = 55;//错误，原因同上 
	p = &i; //把i的地址赋值给p变量
	/**
	*1.p保存了i的地址，因此p指向i
	*2.p不是i，i也不是p，修改p的值不影响i的值，修改i的值也不影响p的值 
	*3.p叫做指针变量，普通变量只能存放值，而指针变量可以存放地址 
	*4.如果一个指针变量，指向了某个普通变量，则 *指针变量 就完全等同与普通变量
	*  例如：int *p; p = &i; 则*p完全等同于i，即在所有出现i的地方都可以替换成*p
	*5.*p表示以p中的内容为地址的变量   //而变量就是声明地址的意思。 
	*/ 
	
	printf("%d\n",*p); 
	
	//printf("%d\n",p);
	//printf("%d\n",&i);
	//两对等同：*p与i，p与&i，可相互替换 
	
	int j;
	j = *p;
	printf("i = %d, j = %d, *p = %d\n",i,j,*p);
	 
	 
	 
	
	
	return 0;
}
