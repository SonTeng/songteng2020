/**
    2020年4月18日 20点08分
*/

#include<stdio.h>

int main(void)
{
	int i = 5;
    int j = 7;
    int k;

    printf("& or && ==================\n");
    //& 与 &&
    k = i & j;
    printf("%d\n",k);  //结果为5
    //5: 0000 0101 后八位，int32位
    //7: 0000 0111
    //&: 0000 0101

    k = i && j;   //k只能是1或者0，1代表真，0代表假
    printf("%d\n",k);
    //逻辑运算符最终的结果只有0，1两种 

    printf("| or || ==================\n");
    //| 与 ||
    k = i|j;    //|：0000 0111 为7
    printf("%d\n",k);

    k = i||j;   // ||：结果只能是0或1
    printf("%d\n",k);

    printf("~ ==================\n");

    int m = 3; // 0011 取反 1100 即：FFFF FFFC 补码存储结果为-4
    k = ~m;
    printf("%d\n",k);

    printf("^ ==================\n");
    k = i ^ j; //5^7:0000 0010 结果为2
    printf("%d\n",k);

    printf("<< ==================\n");
    k = m<<1; // 0000 0011左移一位 0000 0110 结果为6 ，m=3,左移1位相当于3乘以2的一次方
    printf("%d\n",k);

    printf(">> ==================\n");
    int n = 13; //0000 1101
    k = n>>1;  // 0000 0110 结果为6  n=13，右移1位相当于n除以2的一次方
    printf("%d\n",k);

	
	return 0;
}

/**
结果如下：

& or && ==================
5
1
| or || ==================
7
1
~ ==================
-4
^ ==================
2
<< ==================
6
>> ==================
6
*/